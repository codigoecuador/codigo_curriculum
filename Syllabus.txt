SyllabusCodigo EcuadorIntro to Computer Programming with PythonCourse Overview and GoalsThe Codigo Ecuador Intro to Computers with Python course introduces students to programming and computer science. Students will learn to write programs in Python, scrape the web, and save their work in a database. They will further tune their intuition and shapen their logic and critical thinking skills for stronger performance in coding and any subject that requires problem solving or analysis. At the conclusion of the course, students will be empowered to use Python for software engineering, data science, and for automating their own daily tasks.Programming Tools: Codigo Ecuador will provide each student with a Raspberry Pi. Each Pi will come with the case of  All required programming tools are included on this computer. Students will use Python 3 using the IDLE programming environment.Website: http://www.codigoecuador.orgPrerequisitesThis course assumes no prior knowledge of computer science or programming. The material will be presented with enough complexity to understand the subject, and no more.ScheduleThis course will meet once a week on Saturdays at 1:00pm, and will continue until 4:00pm.Course BreakdownWeek 1: Rasbperry Pi unboxing and introduction. A simple introduction to coding will enable the students to display text on the screen. Essential info/warnings: A discussion of the difference between Python 2 and Python 3, and how students should refrain from using Python 2. Initial discussion of exceptions.Week 2: During this week we teach students that everything is an object in Python. An object is a thing, and two different objects of the same type will have the same features, even if the specifics are different. Students will collect user input. Introduction to variables. Discussion of the string, float and integer datatypes, and the + and – operators. They will understand how to convert numbers from string to integer format, and back, as well as the features of integers and floating point numbers. They will begin to learn the difference between datatypes including adding integers versus concatenating strings. Initial discussion of exceptions.Week 3: Control Statements: use of the if/elif statement. Introduction to the Boolean datatype. Introduction to for loops and while loops. Introduction to the datetime and date datatypes, and the process for loading external modules.Week 4: Data Structures I: the list and tuple datatypes. Using a for loop to iterate through and print each element of a list. Using a while loop to do the same thing. Appending and changing lists. Discussion of how tuples are immutable, and what immutability means. Week 5: Data Structures II: dictionary and set datatypes. Using for loops on sets and dictionaries. Introduction to the zip and enumerate functions. Exception handling including try/accept statements.Week 6: Introduction to functions. Functions that do not take an argument. Functions that take an argument versus those that do not. Return statements. Introduction to optional type annotation with functions. Week 7: Objects: Introduction to the idea of a class (i.e. lists, strings, dictionaries are all classes), introduction to type checking. Students will learn the NamedTuple class as a first example of classes. Introduction to external libraries. Further review of the datetime library. Week 8: Data Structures III: String methods, splitting and rejoining strings using the map function. Introduction to the typing library. Introduction to the standard library, which is a collection of modules that come pre-packaged with each Python installation. Importing basic math functions.Week 9: File operations. Creating, writing, and reading files. Storing text in each line of a file. Storing dictionaries conveniently as JSON objects. Introduction to the “with” statement and its use in file reading. Week 24: Introduction to SQL. Week 25: Introduction to SQLite module in python. Create a simple database application tracking class attendance with the sqlite module.Week 26:Week 28: SQL, SQLalchemy and the CMD module. Students will create a simple application using customized classes. Goal: to make use of the ordinary Python standary library functions as “glue” to connect the external libraries, which do most of the heavy lifting.Week 42: Final project working periodWeek 43: Final Project working periodWeek 44: Final exam/project TBD 